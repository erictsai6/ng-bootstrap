{"version":3,"file":"datepicker-month-view.js","sourceRoot":"","sources":["../../src/datepicker/datepicker-month-view.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,YAAY,EAAC,MAAM,eAAe,CAAC;AAElF,OAAO,EAAC,OAAO,EAAC,MAAM,YAAY,CAAC;AACnC,OAAO,EAAC,iBAAiB,EAAC,MAAM,mBAAmB,CAAC;;IAsClD,gCAAmB,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;sBAFvB,IAAI,YAAY,EAAW;QAG5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC1C;IAED,6CAAY,GAAZ,UAAa,GAAG;QACd,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,OAAO,EAAE;YACpC,GAAG,EAAE,GAAG;YACR,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC,CAAC;KACJ;IAED,yCAAQ,GAAR,UAAS,GAAiB;QACxB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACjD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;SAC1C;KACF;IAED,4CAAW,GAAX,UAAY,IAAmB;QAC7B,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM;YACpF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;KACtE;IAED,yCAAQ,GAAR,UAAS,GAAiB;QACxB,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,KAAK,QAAQ,IAAI,IAAI,CAAC,WAAW,KAAK,WAAW,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;KACpH;;gBA3DF,SAAS,SAAC;oBACT,QAAQ,EAAE,2BAA2B;oBACrC,IAAI,EAAE,EAAC,OAAO,EAAE,YAAY,EAAC;oBAC7B,MAAM,EAAE,CAAC,QAER,CAAC;oBACF,QAAQ,EAAE,s0BAgBT;iBACF;;;;gBA1BO,iBAAiB;;;gCA4BtB,KAAK;0BACL,KAAK;gCACL,KAAK;iCACL,KAAK;oCACL,KAAK;4BACL,KAAK;4BACL,KAAK;2BAEL,MAAM;;iCAvCT;;SA8Ba,sBAAsB","sourcesContent":["import {Component, Input, TemplateRef, Output, EventEmitter} from '@angular/core';\nimport {MonthViewModel, DayViewModel, WeekViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\n@Component({\n  selector: 'ngb-datepicker-month-view',\n  host: {'class': 's-calendar'},\n  styles: [`\n\n  `],\n  template: `\n    <div *ngIf=\"showWeekdays\" class=\"ngb-dp-week s-row\">\n      <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-weekday\"></div>\n      <span *ngFor=\"let w of month.weekdays\" class=\"s-calendar-day u-text-center u-text-uppercase caption\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </span>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"month.weeks\">\n      <div *ngIf=\"!isCollapsed(week)\" class=\"ngb-dp-week s-row\">\n        <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-week-number small text-center font-italic text-muted\">{{ week.number }}</div>\n        <ng-template ngFor let-day [ngForOf]=\"week.days\">\n          <ng-template [ngTemplateOutlet]=\"dayTemplate\" [ngTemplateOutletContext]=\"buildContext(day)\">\n          </ng-template>\n        </ng-template>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbDatepickerMonthView {\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n  @Input() month: MonthViewModel;\n  @Input() outsideDays: 'visible' | 'hidden' | 'collapsed';\n  @Input() showWeekdays;\n  @Input() showWeekNumbers;\n  @Input() minDate: NgbDate;\n  @Input() maxDate: NgbDate;\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {\n    this.doSelect = this.doSelect.bind(this);\n  }\n\n  buildContext(day) {\n    return Object.assign({}, day.context, {\n      day: day,\n      doSelect: this.doSelect\n    });\n  }\n\n  doSelect(day: DayViewModel) {\n    if (!day.context.disabled && !this.isHidden(day)) {\n      this.select.emit(NgbDate.from(day.date));\n    }\n  }\n\n  isCollapsed(week: WeekViewModel) {\n    return this.outsideDays === 'collapsed' && week.days[0].date.month !== this.month.number &&\n        week.days[week.days.length - 1].date.month !== this.month.number;\n  }\n\n  isHidden(day: DayViewModel) {\n    return (this.outsideDays === 'hidden' || this.outsideDays === 'collapsed') && this.month.number !== day.date.month;\n  }\n}\n"]}
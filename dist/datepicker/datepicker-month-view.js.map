{"version":3,"sources":["../../src/datepicker/datepicker-month-view.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,KAAA,EAAoB,MAAA,EAAQ,YAAA,EAAa,MAAM,eAAA,CAAgB;AAElF,OAAO,EAAA,OAAE,EAAO,MAAM,YAAA,CAAa;AACnC,OAAO,EAAA,iBAAE,EAAiB,MAAM,mBAAA,CAAoB;AAIpD;IAWE,gCAAmB,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;QAFzC,WAAM,GAAG,IAAI,YAAY,EAAW,CAAC;QAGpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED,6CAAY,GAAZ,UAAa,GAAG;QACd,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,OAAO,EAAE;YACpC,GAAG,EAAE,GAAG;YACR,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC,CAAC;IACL,CAAC;IAED,yCAAQ,GAAR,UAAS,GAAiB;QACxB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACjD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;IAED,4CAAW,GAAX,UAAY,IAAmB;QAC7B,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM;YACpF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IACvE,CAAC;IAED,yCAAQ,GAAR,UAAS,GAAiB;QACxB,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,KAAK,QAAQ,IAAI,IAAI,CAAC,WAAW,KAAK,WAAW,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;IACrH,CAAC;IAyCH,6BAAC;AAAD,CA5EA,AA4EC;;AAxCM,iCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,2BAA2B;gBACrC,IAAI,EAAE,EAAC,OAAO,EAAE,YAAY,EAAC;gBAC7B,MAAM,EAAE,CAAC,QAER,CAAC;gBACF,QAAQ,EAAE,8zBAgBT;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,qCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,iBAAiB,GAAG;CAC1B,EAF6F,CAE7F,CAAC;AACK,qCAAc,GAA2C;IAChE,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACjC,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC3B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACjC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAClC,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACrC,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC7B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC7B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CAC5B,CAAC","file":"datepicker-month-view.js","sourceRoot":"","sourcesContent":["import {Component, Input, TemplateRef, Output, EventEmitter} from '@angular/core';\nimport {MonthViewModel, DayViewModel, WeekViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\n\nexport class NgbDatepickerMonthView {\n   dayTemplate: TemplateRef<DayTemplateContext>;\n   month: MonthViewModel;\n   outsideDays: 'visible' | 'hidden' | 'collapsed';\n   showWeekdays;\n   showWeekNumbers;\n   minDate: NgbDate;\n   maxDate: NgbDate;\n\n   select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {\n    this.doSelect = this.doSelect.bind(this);\n  }\n\n  buildContext(day) {\n    return Object.assign({}, day.context, {\n      day: day,\n      doSelect: this.doSelect\n    });\n  }\n\n  doSelect(day: DayViewModel) {\n    if (!day.context.disabled && !this.isHidden(day)) {\n      this.select.emit(NgbDate.from(day.date));\n    }\n  }\n\n  isCollapsed(week: WeekViewModel) {\n    return this.outsideDays === 'collapsed' && week.days[0].date.month !== this.month.number &&\n        week.days[week.days.length - 1].date.month !== this.month.number;\n  }\n\n  isHidden(day: DayViewModel) {\n    return (this.outsideDays === 'hidden' || this.outsideDays === 'collapsed') && this.month.number !== day.date.month;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-datepicker-month-view',\n  host: {'class': 's-calendar'},\n  styles: [`\n\n  `],\n  template: `\n    <div *ngIf=\"showWeekdays\" class=\"ngb-dp-week s-row\">\n      <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-weekday\"></div>\n      <span *ngFor=\"let w of month.weekdays\" class=\"s-calendar-day u-text-center u-text-uppercase caption\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </span>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"month.weeks\">\n      <div *ngIf=\"!isCollapsed(week)\" class=\"ngb-dp-week s-row\">\n        <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-week-number small text-center font-italic text-muted\">{{ week.number }}</div>\n        <ng-template ngFor let-day [ngForOf]=\"week.days\">\n          <ng-template [ngTemplateOutlet]=\"dayTemplate\" [ngOutletContext]=\"buildContext(day)\">\n          </ng-template>\n        </ng-template>\n      </div>\n    </ng-template>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbDatepickerI18n, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dayTemplate': [{ type: Input },],\n'month': [{ type: Input },],\n'outsideDays': [{ type: Input },],\n'showWeekdays': [{ type: Input },],\n'showWeekNumbers': [{ type: Input },],\n'minDate': [{ type: Input },],\n'maxDate': [{ type: Input },],\n'select': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
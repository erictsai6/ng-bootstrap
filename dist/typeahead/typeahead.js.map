{"version":3,"file":"typeahead.js","sourceRoot":"","sources":["../../src/typeahead/typeahead.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {Observable} from 'rxjs/Observable';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Subject} from 'rxjs/Subject';\nimport {Subscription} from 'rxjs/Subscription';\nimport {letProto} from 'rxjs/operator/let';\nimport {_do} from 'rxjs/operator/do';\nimport {switchMap} from 'rxjs/operator/switchMap';\nimport {fromEvent} from 'rxjs/observable/fromEvent';\nimport {positionElements} from '../util/positioning';\nimport {\n  NgbTypeaheadWindow,\n  ResultTemplateContext,\n  NoResultsTemplateContext,\n  WindowTemplateContext\n} from './typeahead-window';\nimport {PopupService} from '../util/popup';\nimport {toString, isDefined} from '../util/util';\nimport {NgbTypeaheadConfig} from './typeahead-config';\nimport {merge} from 'rxjs/observable/merge';\n\nenum Key {\n  Tab = 9,\n  Enter = 13,\n  Escape = 27,\n  ArrowUp = 38,\n  ArrowDown = 40\n}\n\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTypeahead),\n  multi: true\n};\n\n/**\n * Payload of the selectItem event.\n */\nexport interface NgbTypeaheadSelectItemEvent {\n  /**\n   * An item about to be selected\n   */\n  item: any;\n\n  /**\n   * Function that will prevent item selection if called\n   */\n  preventDefault: () => void;\n}\n\nlet nextWindowId = 0;\n\n/**\n * NgbTypeahead directive provides a simple way of creating powerful typeaheads from any text input\n */\n@Directive({\n  selector: 'input[ngbTypeahead]',\n  host: {\n    '(blur)': 'handleBlur()',\n    '[class.open]': 'isPopupOpen()',\n    '(document:click)': 'dismissPopup()',\n    '(keydown)': 'handleKeyDown($event)',\n    'autocomplete': 'off',\n    'autocapitalize': 'off',\n    'autocorrect': 'off',\n    'role': 'combobox',\n    'aria-multiline': 'false',\n    '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n    '[attr.aria-activedescendant]': 'activeDescendant',\n    '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n    '[attr.aria-expanded]': 'isPopupOpen()'\n  },\n  providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n})\nexport class NgbTypeahead implements ControlValueAccessor,\n    OnInit, OnDestroy {\n  private _popupService: PopupService<NgbTypeaheadWindow>;\n  private _subscription: Subscription;\n  private _userInput: string;\n  private _valueChanges: Observable<string>;\n  private _focusChanges: Observable<string>;\n\n  private _typeaheadSubject: Subject<any>;\n  private _resubscribeTypeahead: BehaviorSubject<any>;\n  private _windowRef: ComponentRef<NgbTypeaheadWindow>;\n  private _zoneSubscription: any;\n\n\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n\n  /**\n   * A flag indicating if model values should be restricted to the ones selected from the popup only.\n   */\n  @Input() editable: boolean;\n\n  /**\n   * A flag indicating if the first match should automatically be focused as you type.\n   */\n  @Input() focusFirst: boolean;\n\n  /**\n   * A function to convert a given value into string to display in the input field\n   */\n  @Input() inputFormatter: (value: any) => string;\n\n  /**\n   * A function to transform the provided observable text into the array of results.  Note that the \"this\" argument\n   * is undefined so you need to explicitly bind it to a desired \"this\" target.\n   */\n  @Input() ngbTypeahead: (text: Observable<string>) => Observable<any[]>;\n\n  /**\n   * A function to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() resultFormatter: (value: any) => string;\n\n  /**\n   * A template to override the dropdown window default display. WindowTemplate will override any result template that\n   * is set.\n   */\n  @Input() windowTemplate: TemplateRef<WindowTemplateContext>;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * A template used to display a no results message in the dropdown window\n   */\n  @Input() noResultsTemplate: TemplateRef<NoResultsTemplateContext>;\n\n  /**\n   * Show hint when an option in the result list matches.\n   */\n  @Input() showHint: boolean;\n\n  /**\n  * Trigger typeahead window on focus.  Automatically shows the window if the user focuses\n  */\n  @Input() triggerOnFocus: boolean;\n\n  /**\n   * An event emitted when a match is selected. Event payload is of type NgbTypeaheadSelectItemEvent.\n   */\n  @Output() selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\n\n  /**\n   * A callback to expose the BehaviorSubject so that we can trigger it ourselves\n   */\n  @Output() exposeTypeaheadSubject = new EventEmitter<any>();\n\n  activeDescendant: string;\n  popupId = `ngb-typeahead-${nextWindowId++}`;\n\n  private _onTouched = () => {};\n  private _onChange = (_: any) => {};\n\n  constructor(\n      private _elementRef: ElementRef, private _viewContainerRef: ViewContainerRef, private _renderer: Renderer2,\n      private _injector: Injector, componentFactoryResolver: ComponentFactoryResolver, config: NgbTypeaheadConfig,\n      ngZone: NgZone) {\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n\n    this._valueChanges = fromEvent(_elementRef.nativeElement, 'input', ($event) => $event.target.value);\n    this._focusChanges = fromEvent(_elementRef.nativeElement, 'focus', ($event) => $event.target.value);\n\n    this._typeaheadSubject = new Subject();\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\n        NgbTypeaheadWindow, _injector, _viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this.isPopupOpen()) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, 'bottom-left',\n            this.container === 'body');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.exposeTypeaheadSubject.emit(this._typeaheadSubject);\n\n    let _inputChanges;\n    if (this.triggerOnFocus) {\n      _inputChanges = merge(this._focusChanges, this._valueChanges, this._typeaheadSubject);\n    } else {\n      _inputChanges = this._valueChanges;\n    }\n\n    const inputValues$ = _do.call(_inputChanges, value => {\n      this._userInput = value;\n      if (this.editable) {\n        this._onChange(value);\n      }\n    });\n    const results$ = letProto.call(inputValues$, this.ngbTypeahead);\n    const processedResults$ = _do.call(results$, () => {\n      if (!this.editable) {\n        this._onChange(undefined);\n      }\n    });\n    const userInput$ = switchMap.call(this._resubscribeTypeahead, () => processedResults$);\n    this._subscription = this._subscribeToUserInput(userInput$);\n  }\n\n  ngOnDestroy(): void {\n    this._closePopup();\n    this._unsubscribeFromUserInput();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  writeValue(value) { this._writeInputValue(this._formatItemForInput(value)); }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  dismissPopup() {\n    if (this.isPopupOpen()) {\n      this._closePopup();\n      this._writeInputValue(this._userInput);\n    }\n  }\n\n  isPopupOpen() { return this._windowRef != null; }\n\n  handleBlur() {\n    this._resubscribeTypeahead.next(null);\n    this._onTouched();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this.isPopupOpen()) {\n      return;\n    }\n\n    if (Key[toString(event.which)]) {\n      switch (event.which) {\n        case Key.ArrowDown:\n          event.preventDefault();\n          this._windowRef.instance.next();\n          this._showHint();\n          break;\n        case Key.ArrowUp:\n          event.preventDefault();\n          this._windowRef.instance.prev();\n          this._showHint();\n          break;\n        case Key.Enter:\n        case Key.Tab:\n          const result = this._windowRef.instance.getActive();\n          if (isDefined(result)) {\n            event.preventDefault();\n            event.stopPropagation();\n            this._selectResult(result);\n          }\n          this._closePopup();\n          break;\n        case Key.Escape:\n          event.preventDefault();\n          this._resubscribeTypeahead.next(null);\n          this.dismissPopup();\n          break;\n      }\n    }\n  }\n\n  private _openPopup() {\n    if (!this.isPopupOpen()) {\n      this._windowRef = this._popupService.open();\n      this._windowRef.instance.id = this.popupId;\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\n      this._windowRef.instance.activeChangeEvent.subscribe((activeId: string) => this.activeDescendant = activeId);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n    }\n  }\n\n  private _closePopup() {\n    this._popupService.close();\n    this._windowRef = null;\n    this.activeDescendant = undefined;\n  }\n\n  private _selectResult(result: any) {\n    let defaultPrevented = false;\n    this.selectItem.emit({item: result, preventDefault: () => { defaultPrevented = true; }});\n    this._resubscribeTypeahead.next(null);\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n      this._onChange(result);\n    }\n  }\n\n  private _selectResultClosePopup(result: any) {\n    this._selectResult(result);\n\n    if (!result.ngDisabled) {\n      this._closePopup();\n    }\n  }\n\n  private _showHint() {\n    if (this.showHint) {\n      const userInputLowerCase = this._userInput.toLowerCase();\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substr(0, this._userInput.length).toLowerCase()) {\n        this._writeInputValue(this._userInput + formattedVal.substr(this._userInput.length));\n        this._elementRef.nativeElement['setSelectionRange'].apply(\n            this._elementRef.nativeElement, [this._userInput.length, formattedVal.length]);\n      } else {\n        this.writeValue(this._windowRef.instance.getActive());\n      }\n    }\n  }\n\n  private _formatItemForInput(item: any): string {\n    return item && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n\n  private _writeInputValue(value: string): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', value);\n  }\n\n  private _subscribeToUserInput(userInput$: Observable<any[]>): Subscription {\n    return userInput$.subscribe((results) => {\n      if ((!results || results.length === 0) &&\n          (!this.noResultsTemplate || this._elementRef.nativeElement.value.length === 0)) {\n        this._closePopup();\n      } else {\n        this._openPopup();\n        this._windowRef.instance.focusFirst = this.focusFirst;\n        this._windowRef.instance.results = results;\n        this._windowRef.instance.term = this._elementRef.nativeElement.value;\n        if (this.resultFormatter) {\n          this._windowRef.instance.formatter = this.resultFormatter;\n        }\n        if (this.windowTemplate) {\n          this._windowRef.instance.windowTemplate = this.windowTemplate;\n        }\n        if (this.resultTemplate) {\n          this._windowRef.instance.resultTemplate = this.resultTemplate;\n        }\n        if (this.noResultsTemplate) {\n          this._windowRef.instance.noResultsTemplate = this.noResultsTemplate;\n        }\n        this._showHint();\n\n        // The observable stream we are subscribing to might have async steps\n        // and if a component containing typeahead is using the OnPush strategy\n        // the change detection turn wouldn't be invoked automatically.\n        this._windowRef.changeDetectorRef.detectChanges();\n      }\n    });\n  }\n\n  private _unsubscribeFromUserInput() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n    this._subscription = null;\n  }\n}\n"]}